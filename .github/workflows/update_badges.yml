# Simple workflow for deploying static content to GitHub Pages
name: Update badges

on:
  # Runs on pull requests to the main branch (i.e. in preparation for a release)
  pull_request:
    branches: ["main"]

  # Or whenever we change the pyproject.toml file
  push:
    paths:
      - "pyproject.toml"

  # Or manually
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  update_readme_urls:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Update README URLs
        run: |
          python .github/scripts/update_readme_badge_urls.py "$GITHUB_WORKSPACE/.python-versions" "$GITHUB_WORKSPACE/pyproject.toml" "$GITHUB_WORKSPACE/README.md"
          echo "----------------------------------------------------------"
          cat "$GITHUB_WORKSPACE/README.md" | head -n 10
          echo "..."
          echo "----------------------------------------------------------"

      - name: Commit changes
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email ""          
          git diff --quiet || (git add "$GITHUB_WORKSPACE/README.md" && git commit -m "Update README.md badge URLs")          
          git push

  update_badges_and_publish_to_pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}
      - name: Update Badge - Tests & Coverage
        run: |
          uv venv
          source .venv/bin/activate
          uv sync --extra benchmarking --dev --resolution highest
          uv run --extra benchmarking pytest ./tests -m "not requires_no_benchmarking_deps" --junitxml=junit.xml --cov=./counted_float/ --cov-report=xml
          PACKAGE_VERSION="$(uv version --short)"
          uv run genbadge tests -i junit.xml -o "./pages/badges/v${PACKAGE_VERSION}/tests.svg"
          uv run genbadge coverage -i coverage.xml -o "./pages/badges/v${PACKAGE_VERSION}/coverage.svg"
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
