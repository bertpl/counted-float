name: Deploy to pypi.org
on:
  push:
    tags:
      - "v*.*.*"  # Match version tags like v1.2.3   (as set by the tag_release workflow)

jobs:

  check_tag_version_correct:
    name: check tag correctness
    runs-on: ubuntu-latest
    steps:
      - name: Full checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # fetch all history and tags

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}

      - name: Check tag
        run: |
          EXPECTED_TAG="v$( uv version --short )"  
          if [ "${GITHUB_REF}" != "refs/tags/${EXPECTED_TAG}" ]; then
            echo "This workflow was triggered by tag ${GITHUB_REF}, but expected tag is refs/tags/${EXPECTED_TAG}"
            echo "This means that the tag does not match the current version in pyproject.toml"
            echo "Please fix this before deploying to production"
            exit -1
          else
            echo "Tag matches the current version in pyproject.toml"
          fi      

  unit_test:
    name: full unit test matrix
    needs: check_tag_version_correct
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        deps-resolution: ["lowest-direct", "highest"]
        optional-deps: ["none", "benchmarking"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}

      - name: Set up venv, Python ${{ matrix.python-version }} & dependencies
        run:  |
            uv python install ${{ matrix.python-version }}
            uv venv --python ${{ matrix.python-version }}
            source .venv/bin/activate
            if [ "${{ matrix.optional-deps }}" = "benchmarking" ]; then
                uv pip compile --resolution ${{ matrix.deps-resolution }} --extra benchmarking --group dev pyproject.toml
                uv sync --extra benchmarking --dev 
            else
                uv pip compile --resolution ${{ matrix.deps-resolution }} --group dev pyproject.toml
                uv sync --dev
            fi

      - name: Run tests
        run:  |
            if [ "${{ matrix.optional-deps }}" = "benchmarking" ]; then
                uv run pytest ./tests -m "not requires_no_benchmarking_deps"
            else
                uv run pytest ./tests/counting ./tests/shared -m "not requires_benchmarking_deps"
            fi

  deploy:
    name: deploy to pypi.org (PROD)
    needs: unit_test
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}

      - name: Build package with uv
        run: uv build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/